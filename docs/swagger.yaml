basePath: /
definitions:
  main.Credentials:
    properties:
      id:
        type: string
      password:
        type: string
    type: object
  main.User:
    properties:
      authlevel:
        type: string
      id:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  main.ticketdesc:
    properties:
      description:
        type: string
    type: object
  main.updateBody:
    properties:
      client_response:
        type: string
      description:
        type: string
      ticket_status:
        type: string
    type: object
host: localhost:9000
info:
  contact:
    email: soberkoder@swagger.io
    name: API Support
  description: This is a sample service for ticket Implementation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: ticket
  version: "1.0"
paths:
  /CreateUser:
    post:
      consumes:
      - application/json
      description: Signup
      parameters:
      - description: create a new user
        in: body
        name: incident
        required: true
        schema:
          $ref: '#/definitions/main.User'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "401":
          description: ""
      summary: create a new user
      tags:
      - User
  /Createticket:
    post:
      consumes:
      - application/json
      description: create ticket
      parameters:
      - description: Enter the ticket description
        in: body
        name: TD
        required: true
        schema:
          $ref: '#/definitions/main.ticketdesc'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "401":
          description: ""
      summary: create ticket
      tags:
      - Ticket
  /DeleteUser/{id}:
    delete:
      consumes:
      - application/json
      description: delete user
      parameters:
      - description: Enter emailid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "401":
          description: ""
      summary: delete user
      tags:
      - User
  /GetAllTickets:
    get:
      consumes:
      - application/json
      description: get All Ticket
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "401":
          description: ""
      summary: get All Ticket
      tags:
      - Ticket
  /GetAllUsers:
    get:
      consumes:
      - application/json
      description: get all user
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "401":
          description: ""
      summary: get all users
      tags:
      - User
  /GetMyTickets:
    get:
      consumes:
      - application/json
      description: get All Ticket
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "401":
          description: ""
      summary: get All Ticket
      tags:
      - Ticket
  /GetUser/{id}:
    get:
      consumes:
      - application/json
      description: getoneuser
      parameters:
      - description: Enter email id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "401":
          description: ""
      summary: get one user
      tags:
      - User
  /Getticket/{id}:
    get:
      consumes:
      - application/json
      description: get one ticket
      parameters:
      - description: Enter Ticketid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "401":
          description: ""
      summary: get one ticket
      tags:
      - Ticket
  /Signin:
    post:
      consumes:
      - application/json
      description: Signin
      parameters:
      - description: Enter your email Id and password
        in: body
        name: creds
        required: true
        schema:
          $ref: '#/definitions/main.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "401":
          description: ""
      summary: signin
      tags:
      - Login
  /Updateticket/{id}:
    put:
      consumes:
      - application/json
      description: update ticket
      parameters:
      - description: Enter Ticketid
        in: path
        name: id
        required: true
        type: string
      - description: '[Client - respond to ticket or change the ticket status]  [Admin
          - Close the ticket]  [Admin Team - Update the description]'
        in: body
        name: body
        schema:
          $ref: '#/definitions/main.updateBody'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "401":
          description: ""
      summary: update ticket
      tags:
      - Ticket
swagger: "2.0"
